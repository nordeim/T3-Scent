Error: [[ << query #1 ]quiz.getAdvancedQuizQuestions {}
    at createConsoleError (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/errors/console-error.js:27:71)
    at handleConsoleError (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/errors/use-error-handler.js:47:54)
    at error (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/globals/intercept-console-error.js:47:57)
    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/client/dist/links/loggerLink.mjs:124:15)
    at logResult (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/client/dist/links/loggerLink.mjs:160:25)
    at Object.error (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/client/dist/links/loggerLink.mjs:173:25)
    at Object.error (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/server/dist/observable/operators.mjs:92:37)
    at Object.error (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/server/dist/observable/observable.mjs:45:37)
    at eval (webpack-internal:///(app-pages-browser)/./node_modules/@trpc/client/dist/links/httpBatchLink.mjs:106:30)

$ npm run dev

> the_scent@0.1.0 dev
> next dev

   ▲ Next.js 15.3.2
   - Local:        http://localhost:3000
   - Network:      http://192.168.2.132:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 2s
 ○ Compiling / ...
[Error: Cannot apply unknown utility class: border-border]
 ✓ Compiled / in 9.3s (1584 modules)
prisma:query SELECT "public"."products"."id", "public"."products"."name", "public"."products"."slug", "public"."products"."description", "public"."products"."price", "public"."products"."compareAtPrice", "public"."products"."costPrice", "public"."products"."sku", "public"."products"."barcode", "public"."products"."weight", "public"."products"."dimensions", "public"."products"."inStock", "public"."products"."lowStockThreshold", "public"."products"."stockQuantity", "public"."products"."featured", "public"."products"."bestSeller", "public"."products"."isNew", "public"."products"."onSale", "public"."products"."saleEndDate", "public"."products"."publishedAt", "public"."products"."metaTitle", "public"."products"."metaDescription", "public"."products"."modelUrl", "public"."products"."arPlacement", "public"."products"."leadTime", "public"."products"."safetyStock", "public"."products"."turnoverRate", "public"."products"."forecastedDemand", "public"."products"."depletionDate", "public"."products"."createdAt", "public"."products"."updatedAt" FROM "public"."products" WHERE ("public"."products"."publishedAt" IS NOT NULL AND "public"."products"."publishedAt" <= $1 AND "public"."products"."featured" = $2) ORDER BY "public"."products"."createdAt" DESC LIMIT $3 OFFSET $4
 GET / 200 in 11771ms
 ○ Compiling /api/auth/[...nextauth] ...
 ✓ Compiled /api/auth/[...nextauth] in 1629ms (1577 modules)
 GET /api/auth/session 200 in 2663ms
 GET /api/auth/session 200 in 43ms
 ○ Compiling /contact ...
 ✓ Compiled /contact in 608ms (1593 modules)
 GET /contact 200 in 736ms
 ✓ Compiled /faq in 406ms (1595 modules)
 GET /faq 200 in 513ms
 ○ Compiling /account/orders ...
 ✓ Compiled /account/orders in 1112ms (1622 modules)
 GET /account/orders 200 in 1540ms
 ○ Compiling /auth/signin ...
 ✓ Compiled /auth/signin in 634ms (1632 modules)
Error: Route "/auth/signin" used `searchParams.error`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SignInPage (src/app/auth/signin/page.tsx:20:16)
  18 | export default function SignInPage({ searchParams }: SignInPageProps) {
  19 |   // Access searchParams properties at the beginning of the function
> 20 |   const error = searchParams?.error;
     |                ^
  21 |   const callbackUrl = searchParams?.callbackUrl;
  22 |
  23 |   // Any async operations (if this page had them) would come after accessing props.
Error: Route "/auth/signin" used `searchParams.callbackUrl`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SignInPage (src/app/auth/signin/page.tsx:21:22)
  19 |   // Access searchParams properties at the beginning of the function
  20 |   const error = searchParams?.error;
> 21 |   const callbackUrl = searchParams?.callbackUrl;
     |                      ^
  22 |
  23 |   // Any async operations (if this page had them) would come after accessing props.
  24 |   // For example:
 GET /auth/signin?callbackUrl=%2Faccount%2Fprofile 200 in 745ms
Error: Route "/auth/signin" used `searchParams.error`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SignInPage (src/app/auth/signin/page.tsx:20:16)
  18 | export default function SignInPage({ searchParams }: SignInPageProps) {
  19 |   // Access searchParams properties at the beginning of the function
> 20 |   const error = searchParams?.error;
     |                ^
  21 |   const callbackUrl = searchParams?.callbackUrl;
  22 |
  23 |   // Any async operations (if this page had them) would come after accessing props.
Error: Route "/auth/signin" used `searchParams.callbackUrl`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SignInPage (src/app/auth/signin/page.tsx:21:22)
  19 |   // Access searchParams properties at the beginning of the function
  20 |   const error = searchParams?.error;
> 21 |   const callbackUrl = searchParams?.callbackUrl;
     |                      ^
  22 |
  23 |   // Any async operations (if this page had them) would come after accessing props.
  24 |   // For example:
 GET /auth/signin?callbackUrl=%2Faccount%2Fprofile 200 in 37ms
 GET /api/auth/providers 200 in 82ms
 GET /api/auth/providers 200 in 15ms
 ✓ Compiled /shipping-returns in 462ms (1637 modules)
 GET /shipping-returns 200 in 542ms
 ○ Compiling /products ...
 ✓ Compiled /products in 2.4s (1642 modules)
Error: Route "/products" used `searchParams.page`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at ProductsPage (src/app/products/page.tsx:24:20)
  22 | export default async function ProductsPage({ searchParams }: ProductsPageProps) {
  23 |   // Access searchParams properties at the beginning
> 24 |   const pageParam = searchParams?.page;
     |                    ^
  25 |   const sortByParam = searchParams?.sortBy;
  26 |   const categoryParam = searchParams?.category;
  27 |
Error: Route "/products" used `searchParams.sortBy`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at ProductsPage (src/app/products/page.tsx:25:22)
  23 |   // Access searchParams properties at the beginning
  24 |   const pageParam = searchParams?.page;
> 25 |   const sortByParam = searchParams?.sortBy;
     |                      ^
  26 |   const categoryParam = searchParams?.category;
  27 |
  28 |   const currentPage = parseInt(pageParam || "1");
Error: Route "/products" used `searchParams.category`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at ProductsPage (src/app/products/page.tsx:26:24)
  24 |   const pageParam = searchParams?.page;
  25 |   const sortByParam = searchParams?.sortBy;
> 26 |   const categoryParam = searchParams?.category;
     |                        ^
  27 |
  28 |   const currentPage = parseInt(pageParam || "1");
  29 |   const limit = 12; 
prisma:query SELECT 1
prisma:query SELECT "public"."products"."id", "public"."products"."name", "public"."products"."slug", "public"."products"."description", "public"."products"."price", "public"."products"."compareAtPrice", "public"."products"."costPrice", "public"."products"."sku", "public"."products"."barcode", "public"."products"."weight", "public"."products"."dimensions", "public"."products"."inStock", "public"."products"."lowStockThreshold", "public"."products"."stockQuantity", "public"."products"."featured", "public"."products"."bestSeller", "public"."products"."isNew", "public"."products"."onSale", "public"."products"."saleEndDate", "public"."products"."publishedAt", "public"."products"."metaTitle", "public"."products"."metaDescription", "public"."products"."modelUrl", "public"."products"."arPlacement", "public"."products"."leadTime", "public"."products"."safetyStock", "public"."products"."turnoverRate", "public"."products"."forecastedDemand", "public"."products"."depletionDate", "public"."products"."createdAt", "public"."products"."updatedAt" FROM "public"."products" WHERE ("public"."products"."publishedAt" IS NOT NULL AND "public"."products"."publishedAt" <= $1) ORDER BY "public"."products"."createdAt" DESC LIMIT $2 OFFSET $3
 GET /products 200 in 2845ms
 ○ Compiling /collections/[slug] ...
 ✓ Compiled /collections/[slug] in 632ms (1647 modules)
Error: Route "/collections/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:51:22)
  49 | export default async function CollectionPage({ params, searchParams }: CollectionPageProps) {
  50 |   // Access params and searchParams at the beginning
> 51 |   const slug = params.slug; 
     |                      ^
  52 |   const pageParam = searchParams?.page; 
  53 |   const sortByParam = searchParams?.sortBy;
  54 |
Error: Route "/collections/[slug]" used `searchParams.page`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:52:20)
  50 |   // Access params and searchParams at the beginning
  51 |   const slug = params.slug; 
> 52 |   const pageParam = searchParams?.page; 
     |                    ^
  53 |   const sortByParam = searchParams?.sortBy;
  54 |
  55 |   const serverApi = await createServerActionClient(); // Create client after accessing props
Error: Route "/collections/[slug]" used `searchParams.sortBy`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:53:22)
  51 |   const slug = params.slug; 
  52 |   const pageParam = searchParams?.page; 
> 53 |   const sortByParam = searchParams?.sortBy;
     |                      ^
  54 |
  55 |   const serverApi = await createServerActionClient(); // Create client after accessing props
  56 |   
Error: Route "/collections/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (src/app/collections/[slug]/page.tsx:20:22)
  18 | export async function generateMetadata({ params }: CollectionPageProps): Promise<Metadata> {
  19 |   // Access params at the beginning
> 20 |   const slug = params.slug; 
     |                      ^
  21 |   
  22 |   const serverApi = await createServerActionClient(); // Create client after accessing params
  23 |
prisma:query SELECT "public"."products"."id", "public"."products"."name", "public"."products"."slug", "public"."products"."description", "public"."products"."price", "public"."products"."compareAtPrice", "public"."products"."costPrice", "public"."products"."sku", "public"."products"."barcode", "public"."products"."weight", "public"."products"."dimensions", "public"."products"."inStock", "public"."products"."lowStockThreshold", "public"."products"."stockQuantity", "public"."products"."featured", "public"."products"."bestSeller", "public"."products"."isNew", "public"."products"."onSale", "public"."products"."saleEndDate", "public"."products"."publishedAt", "public"."products"."metaTitle", "public"."products"."metaDescription", "public"."products"."modelUrl", "public"."products"."arPlacement", "public"."products"."leadTime", "public"."products"."safetyStock", "public"."products"."turnoverRate", "public"."products"."forecastedDemand", "public"."products"."depletionDate", "public"."products"."createdAt", "public"."products"."updatedAt" FROM "public"."products" WHERE ("public"."products"."publishedAt" IS NOT NULL AND "public"."products"."publishedAt" <= $1 AND EXISTS(SELECT "t0"."B" FROM "public"."_ProductToCollection" AS "t0" INNER JOIN "public"."collections" AS "j0" ON ("j0"."id") = ("t0"."A") WHERE ("j0"."slug" = $2 AND ("public"."products"."id") = ("t0"."B") AND "t0"."B" IS NOT NULL))) ORDER BY "public"."products"."createdAt" DESC LIMIT $3 OFFSET $4
 GET /collections/new-arrivals 200 in 1862ms
Error: Route "/collections/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:51:22)
  49 | export default async function CollectionPage({ params, searchParams }: CollectionPageProps) {
  50 |   // Access params and searchParams at the beginning
> 51 |   const slug = params.slug; 
     |                      ^
  52 |   const pageParam = searchParams?.page; 
  53 |   const sortByParam = searchParams?.sortBy;
  54 |
Error: Route "/collections/[slug]" used `searchParams.page`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:52:20)
  50 |   // Access params and searchParams at the beginning
  51 |   const slug = params.slug; 
> 52 |   const pageParam = searchParams?.page; 
     |                    ^
  53 |   const sortByParam = searchParams?.sortBy;
  54 |
  55 |   const serverApi = await createServerActionClient(); // Create client after accessing props
Error: Route "/collections/[slug]" used `searchParams.sortBy`. `searchParams` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CollectionPage (src/app/collections/[slug]/page.tsx:53:22)
  51 |   const slug = params.slug; 
  52 |   const pageParam = searchParams?.page; 
> 53 |   const sortByParam = searchParams?.sortBy;
     |                      ^
  54 |
  55 |   const serverApi = await createServerActionClient(); // Create client after accessing props
  56 |   
Error: Route "/collections/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (src/app/collections/[slug]/page.tsx:20:22)
  18 | export async function generateMetadata({ params }: CollectionPageProps): Promise<Metadata> {
  19 |   // Access params at the beginning
> 20 |   const slug = params.slug; 
     |                      ^
  21 |   
  22 |   const serverApi = await createServerActionClient(); // Create client after accessing params
  23 |
prisma:query SELECT "public"."products"."id", "public"."products"."name", "public"."products"."slug", "public"."products"."description", "public"."products"."price", "public"."products"."compareAtPrice", "public"."products"."costPrice", "public"."products"."sku", "public"."products"."barcode", "public"."products"."weight", "public"."products"."dimensions", "public"."products"."inStock", "public"."products"."lowStockThreshold", "public"."products"."stockQuantity", "public"."products"."featured", "public"."products"."bestSeller", "public"."products"."isNew", "public"."products"."onSale", "public"."products"."saleEndDate", "public"."products"."publishedAt", "public"."products"."metaTitle", "public"."products"."metaDescription", "public"."products"."modelUrl", "public"."products"."arPlacement", "public"."products"."leadTime", "public"."products"."safetyStock", "public"."products"."turnoverRate", "public"."products"."forecastedDemand", "public"."products"."depletionDate", "public"."products"."createdAt", "public"."products"."updatedAt" FROM "public"."products" WHERE ("public"."products"."publishedAt" IS NOT NULL AND "public"."products"."publishedAt" <= $1 AND EXISTS(SELECT "t0"."B" FROM "public"."_ProductToCollection" AS "t0" INNER JOIN "public"."collections" AS "j0" ON ("j0"."id") = ("t0"."A") WHERE ("j0"."slug" = $2 AND ("public"."products"."id") = ("t0"."B") AND "t0"."B" IS NOT NULL))) ORDER BY "public"."products"."createdAt" DESC LIMIT $3 OFFSET $4
 GET /collections/best-sellers 200 in 87ms
 ○ Compiling /gift-cards ...
 ✓ Compiled /gift-cards in 530ms (1637 modules)
 GET /gift-cards 200 in 746ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 554ms (1641 modules)
 GET /images/gift_card_25.jpg 404 in 1133ms
 ⨯ The requested resource isn't a valid image for /images/gift_card_25.jpg received text/html; charset=utf-8
 GET /images/gift_card_50.jpg 404 in 1138ms
 ⨯ The requested resource isn't a valid image for /images/gift_card_50.jpg received text/html; charset=utf-8
 GET /images/gift_card_100.jpg 404 in 1142ms
 ⨯ The requested resource isn't a valid image for /images/gift_card_100.jpg received text/html; charset=utf-8
 GET /images/gift_card_200.jpg 404 in 1147ms
 ⨯ The requested resource isn't a valid image for /images/gift_card_200.jpg received text/html; charset=utf-8
 ○ Compiling /quiz ...
 ✓ Compiled /quiz in 3.7s (2468 modules)
 GET /quiz 200 in 3883ms


